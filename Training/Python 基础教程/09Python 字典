#encoding=utf-8
# 字典是另一种可变容器模型，且可存储任意类型对象。
# 字典的每个键值(key=>value)对用冒号(:)分割，每个对之间用逗号(,)分割，整个字典包括在花括号({})中
# 键必须是唯一的，但值则不必。# 值可以取任何数据类型，但键必须是不可变的，如字符串，数字或元组。
dict1 = { 'abc': 123, 98.6: 37,(1,2):'sdfdsf' };#字典是无序的
print dict1

# 字典值可以没有限制地取任何python对象，既可以是标准的对象，也可以是用户定义的，但键不行。
# 两个重要的点需要记住：
# 1）不允许同一个键出现两次。创建时如果同一个键被赋值两次， 后一个值会被记住
# 2）键必须不可变，所以可以用数字，字符串或元组充当，所以用列表就不行，
#dict1={[1,2]:[1,2]}#TypeError: unhashable type: 'list'

#Python字典内置方法
# dict.clear() 删除字典内所有元素
dict1.clear()
print dict1#{}

# dict.copy()返回一个字典的浅复制
dict1={1:1,2:2}
dict2=dict1
dict3=dict1.copy()
print(dict1 is dict2)#True
print dict1 is dict3#False

# dict.fromkeys(seq[, val]))创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对应的初始值
seq = ('name', 'age', 'sex')
dict1 = dict1.fromkeys(seq, 10)
print "New Dictionary : %s" %  str(dict1) #New Dictionary : {'age': 10, 'name': 10, 'sex': 10}

# dict.get(key, default=None)返回指定键的值，如果值不在字典中返回默认值
print dict1.get("name1",[1,3,5])#[1, 3, 5]
#dict.setdefault(key, default=None) 和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default
print "Value : %s" %  dict1.setdefault('dsfsdfsdf', None)#None
print "Value : %s" %  dict1.setdefault('name', "dfd")#10

# dict.has_key(key)如果键在字典dict里返回true，否则返回false

#dict.items()以列表返回可遍历的(键, 值) 元组数组
dict1 = {'Name': 'Zara', 'Age': 7}
print "Value : %s" % dict1.items()#Value : [('Age', 7), ('Name', 'Zara')]

# dict.keys() 以列表返回一个字典所有的键

#dict.values()以列表返回字典中的所有值

# pop(key[,default])删除字典给定键 key 所对应的值，返回值为被删除的值。key如果存在返回对应的值，如果不存在返回默认值
print dict1.pop("666","haha")#haha

# popitem() 随机返回并删除字典中的一对键和值。
site= {'name': '菜鸟教程', 'url': 'www.runoob.com','alexa': 10000, }
pop_obj=site.popitem()
print(pop_obj)
for x in site.values():
    print x#循环序列的中文正常打印
print(str(site).decode("string_escape"))#对序列中文的解码
print str(("解码","解码")).decode("string_escape")
print repr('Hello')#'Hello',repr与str理解字符串与数字的方式不同
